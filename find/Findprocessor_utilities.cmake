if(NOT TARGET processor_utilities::processor_utilities)
    add_library(processor_utilities::processor_utilities INTERFACE IMPORTED)
    message(STATUS "Component target declared: processor_utilities::processor_utilities")

    set(PROCESSOR_UTILITIES_INCLUDE_DIR "${FETCH_LOCATION}/include/processor_utilities")
    set_target_properties(processor_utilities::processor_utilities PROPERTIES
        INTERFACE_INCLUDE_DIRECTORIES "${PROCESSOR_UTILITIES_INCLUDE_DIR}"
    )

    if(APPLE)
        set_target_properties(processor_utilities::processor_utilities PROPERTIES
            INTERFACE_COMPILE_DEFINITIONS "GPU_AUDIO_MAC"
        )
    else()
        string(COMPARE EQUAL "${CONAN_HIP_ARCH}" "" hip_empty)
        if(DEFINED WITH_HIP AND NOT WITH_HIP)
            set(hip_empty true)
        endif()
        if(NOT hip_empty AND NOT DEFINED ENV{HIP_PATH})
            message(WARNING "Skip [${CONAN_HIP_ARCH}]: HIP SDK not found (HIP_PATH is not set in the OS environment)")
            set(hip_empty true)
        endif()
        if(hip_empty)
            set(WITH_HIP FALSE CACHE BOOL "Build with HIP SDK dependency" FORCE)
            message(STATUS "WITH_HIP: ${WITH_HIP}")
        endif()
        if(NOT hip_empty)
            set(WITH_HIP TRUE CACHE BOOL "Build with HIP SDK dependency")
            message(STATUS "WITH_HIP: ${WITH_HIP}")
            cmake_policy(SET CMP0144 OLD)
            find_package(hip REQUIRED)
            target_link_libraries(processor_utilities::processor_utilities
                INTERFACE hip::hip
            )
        endif()

        string(COMPARE EQUAL "${CONAN_CUDA_ARCH}" "" cuda_empty)
        if(DEFINED WITH_CUDA AND NOT WITH_CUDA)
            set(cuda_empty true)
        endif()
        if(NOT cuda_empty AND NOT DEFINED ENV{CUDA_PATH})
            message(WARNING "Skip [${CONAN_CUDA_ARCH}]: CUDA Toolkit not found (CUDA_PATH is not set in the OS environment)")
            set(cuda_empty true)
        endif()
        if(cuda_empty)
            set(WITH_CUDA FALSE CACHE BOOL "Build with CUDA Toolkit dependency" FORCE)
            message(STATUS "WITH_CUDA: ${WITH_CUDA}")
        endif()
        if(NOT cuda_empty)
            set(WITH_CUDA TRUE CACHE BOOL "Build with CUDA Toolkit dependency")
            if(DEFINED CUDA_VERSION)
                message(STATUS "WITH_CUDA: ${WITH_CUDA}, ver. ${CUDA_VERSION}")
            else()
                message(STATUS "WITH_CUDA: ${WITH_CUDA}")
            endif()
        endif()

    endif()
endif()
